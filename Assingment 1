#include <stdio.h>
#include <stdlib.h>
struct node {
    int data;
    struct node *next;
}*head;

void createlist(int n);
void display();
void inserlast(int y);
int nodecount();
void deletemidpos(int mid);


int main()
{
    int n,x,y,tnodes;
    float mid;
    printf("How much node you want: ");
    scanf("%d",&n);
    createlist(n);
    display();
    printf("Enter data to add last: ");
    scanf("%d",&y);
    inserlast(y);
    display();
    tnodes = nodecount();
    mid=tnodes/2;
    deletemidpos(mid);
    display();
    printf("\n\nTotal node: %d",tnodes);

    return 0;
}

void createlist(int n)
{
    int data,i;
    struct node *newnode,*temp;
    head = (struct node*)malloc(sizeof(struct node));
    printf("Enter data: ");
    scanf("%d",&data);
    head->data = data;
    head->next = NULL;
    temp = head;
    for(i=2;i<=n;i++){
        newnode = (struct node*)malloc(sizeof(struct node));
        printf("Enter data: ");
        scanf("%d",&data);
        newnode->data = data;
        newnode->next = NULL;
        temp->next = newnode;
        temp=temp->next;
    }

}

void display()
{
    struct node *temp;
    temp = head;
    printf("\n");
    while(temp!=NULL)
    {
        printf("%d->",temp->data);
        temp=temp->next;
    }
    printf("NULL\n");
}
void inserlast(int y){
    struct node *temp,*newNode;
    newNode = (struct node*)malloc(sizeof(struct node));


    newNode->data = y;
    newNode->next = NULL;
    temp=head;
    while(temp->next!=NULL)
    {
        temp=temp->next;

    }
    temp->next = newNode;
}

void deletemidpos(int mid)
{
    int i;
    struct node *temp,*temp2;
    temp=head;

    if(mid==1){
        head=head->next;
    }
    else{
        for(i=1;i<mid-1;i++)
        {
            temp=temp->next;

        }
        temp2=temp->next;
        temp->next = temp2->next;
        free(temp2);
    }
}


int nodecount()
{
    int count=0;
    struct node *temp;
    temp=head;
    while(temp!=NULL){
        count++;
        temp=temp->next;
    }
    return count;
}
